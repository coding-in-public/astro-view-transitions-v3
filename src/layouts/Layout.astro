---
import "../styles/main.css";

import { Icon } from "astro-icon";
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="bg-theme-base text-theme-900">
    <nav class="flex items-center justify-center gap-4 p-2">
      <a
        class="w-8 h-8 grid place-items-center rounded hover:bg-theme-200"
        aria-label="Go Home"
        href="/"
      >
        <Icon name="bx:bxs-home" class="w-4 h-4 text-theme-800" />
      </a>
      <button
        class="w-8 h-8 grid place-items-center rounded hover:bg-theme-200"
        data-theme-toggle
        aria-label="toggle theme"
      >
        <Icon name="bx:bxs-sun" class="w-4 h-4 text-theme-800" />
      </button>
    </nav>
    <slot />
  </body>
</html>

<script>
  const themeToggles = document.querySelectorAll("[data-theme-toggle]");

  const getTheme = () => localStorage.getItem("theme") || "light";

  const setTheme = (theme) =>
    document.documentElement.setAttribute("data-theme", theme);

  window.addEventListener("DOMContentLoaded", () => setTheme(getTheme()));

  themeToggles.forEach((toggle) => {
    toggle.addEventListener("click", () => {
      const nextTheme = getTheme() === "light" ? "dark" : "light";
      localStorage.setItem("theme", nextTheme);
      setTheme(nextTheme);
    });
  });
</script>
